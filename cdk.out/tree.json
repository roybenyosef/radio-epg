{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "radio-epg": {
        "id": "radio-epg",
        "path": "radio-epg",
        "children": {
          "EpgDataBucket": {
            "id": "EpgDataBucket",
            "path": "radio-epg/EpgDataBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "radio-epg/EpgDataBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "epg-data-s3-bucket-42",
                    "lifecycleConfiguration": {
                      "rules": [
                        {
                          "noncurrentVersionExpirationInDays": 3,
                          "status": "Enabled"
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "radio-epg/EpgDataBucket/Notifications"
              }
            }
          },
          "EpgOutBucket": {
            "id": "EpgOutBucket",
            "path": "radio-epg/EpgOutBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "radio-epg/EpgOutBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "epg-out-s3-bucket-42"
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "radio-epg/EpgOutBucket/Notifications"
              },
              "Policy": {
                "id": "Policy",
                "path": "radio-epg/EpgOutBucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "radio-epg/EpgOutBucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "EpgOutBucket071554AF"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": "*",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "EpgOutBucket071554AF",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "epg-update-fn-errors-topic": {
            "id": "epg-update-fn-errors-topic",
            "path": "radio-epg/epg-update-fn-errors-topic",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "radio-epg/epg-update-fn-errors-topic/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                  "aws:cdk:cloudformation:props": {
                    "displayName": "epg data current show updater errors topic"
                  }
                }
              },
              "roy.benyosef@gmail.com": {
                "id": "roy.benyosef@gmail.com",
                "path": "radio-epg/epg-update-fn-errors-topic/roy.benyosef@gmail.com",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "radio-epg/epg-update-fn-errors-topic/roy.benyosef@gmail.com/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                      "aws:cdk:cloudformation:props": {
                        "protocol": "email",
                        "topicArn": {
                          "Ref": "epgupdatefnerrorstopicCC45BF3D"
                        },
                        "endpoint": "roy.benyosef@gmail.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "Singleton": {
            "id": "Singleton",
            "path": "radio-epg/Singleton",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "radio-epg/Singleton/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "radio-epg/Singleton/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "radio-epg/Singleton/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "radio-epg/Singleton/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "EpgDataBucketED941078",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "EpgDataBucketED941078",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "EpgOutBucket071554AF",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "EpgOutBucket071554AF",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SingletonServiceRoleDefaultPolicy7525C238",
                            "roles": [
                              {
                                "Ref": "SingletonServiceRoleDDD815CD"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "radio-epg/Singleton/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "import os\nimport json\nimport boto3\nfrom botocore.exceptions import ClientError\n\nS3 = boto3.client('s3')\n\n\ndef main(event, context):\n    try:\n        response = S3.get_object(Bucket=os.environ['DATA_BUCKET_NAME'], Key='epg_data.json')\n        file_content = json.loads(response['Body'].read())\n        print(f'File content: {file_content}')\n\n        out_data = file_content[0]['epg']['Sun'][0]\n        S3.put_object(Body=str(out_data), Bucket=os.environ['OUT_BUCKET_NAME'], Key='epg_out.json')\n\n    except ClientError as e:\n        raise\n"
                    },
                    "handler": "index.main",
                    "role": {
                      "Fn::GetAtt": [
                        "SingletonServiceRoleDDD815CD",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "environment": {
                      "variables": {
                        "DATA_BUCKET_NAME": {
                          "Ref": "EpgDataBucketED941078"
                        },
                        "OUT_BUCKET_NAME": {
                          "Ref": "EpgOutBucket071554AF"
                        }
                      }
                    }
                  }
                }
              },
              "AllowEventRuleradioepgRuleF21AC637": {
                "id": "AllowEventRuleradioepgRuleF21AC637",
                "path": "radio-epg/Singleton/AllowEventRuleradioepgRuleF21AC637",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "Singleton8C7B99F3",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "Rule4C995B7F",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "Rule": {
            "id": "Rule",
            "path": "radio-epg/Rule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "radio-epg/Rule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "scheduleExpression": "rate(5 minutes)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "Singleton8C7B99F3",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "fn-error-alarm": {
            "id": "fn-error-alarm",
            "path": "radio-epg/fn-error-alarm",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "radio-epg/fn-error-alarm/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                    "evaluationPeriods": 1,
                    "alarmName": "epg-data-update-alarm",
                    "metricName": "Errors",
                    "namespace": "AWS/Lambda",
                    "period": 300,
                    "statistic": "Sum",
                    "threshold": 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}